Problem Statement
You are invited to LHS’s top-secret facility, the number factory, as an inspector. The factory’s assembly line consists of N machines, each associated with a number a[i] and one of the three operators(+,-,*) b[i]. Machine 1 at the start of the assembly line is first fed with an initial number m, and at each station, machine #i would operate the number under its operator b[i] with number a[i]. For instance, if a machine picked up the number 5 and its operator pair is (-,3), the result of this operation would be 5 - 3 = 2. After performing the transformation, the number will be passed down to the next machine (or more formally machine #i+1 )

There are M instructions of two types. The first type passes in an initial number x[i], and asks you, the inspector, what number would it become after the operation at machine y[i]. The second type changes machine m[i]’s operator pair to (n[i],o[i]). Since the number can get quite big for the first instruction, mod the result by 1000000007

Additional Notes
Time Limit:
C++: 2.5 seconds
Java, Python: 5 seconds
Memory Limit: 128mb
Finally, the problem uses standard IO(so not reading files)

Constraints
1 ≤ N,M ≤ 10^5
0 ≤ a[i],x[i],n[i] ≤ 10^9

Input format
The first line contains two integers, N,M
The following N describes the state of the ith machine, containing b[i] and a[i].
The last M lines are the instructions:
If the first character is ‘q’, then its the first type of instruction, containing x[i] and y[i].
If the first character is ‘c’, then its the second type, containing m[i],n[i], and o[i].

Output format
For each instruction of the first type, output a positive integer that indicates the result after inputting initial number x[i] and all the transformations up until machine y[i].

Sample input:
3 3
+ 4
* 5
- 3
q 1 3
c 2 6 -
q 4 2

Sample output
22
2

Sample Explanation
For the first instruction, its simply ((1 + 4) * 5) - 3 = 22
The second instruction changes machine #2 to (-,6)
For the third instruction, its (4 + 4) - 6 = 2
