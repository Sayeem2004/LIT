Problem Statement
Ms. Take has just received r red textbooks and b blue textbooks, but the shipment was defective, so instead of having the same width, the books have widths R[1], R[2], … R[r], B[1], B[2], ... B[b]. Ms. Take wants to put the textbooks on her bookshelf, which has width s. However, having odd fashion taste, Ms. Take insists on alternating her shelf between the colors, not putting any red textbook next to any other red textbook or any blue textbook next to another blue textbook. She also wants to sort her books by non-increasing width.

Help Ms. Take determine the number of ways she can do this, as the number can get quite large, please print the remainder of dividing the answer by 1000000007. Note that Ms. Take does not need to use all of the books.

Additional Notes
Time Limit:
C++: 2.5 seconds
Java, Python: 5 seconds
Memory Limit: 128mb
Finally, the problem uses standard IO(so not reading files)

Constraints
1 ≤ r,b,s,R[i],B[i] ≤ 10^3

Input format
The first line contains three integers: r, b, and s.
The second line contains r integers, with the ith integer being the width of the ith red book.
The third line contains b integers, with the ith integer being the width of the ith blue book.
It is guaranteed that there are no two books of the same color that have the same width.

Output format
The output should be one integer, the number of ways modulo 1000000007.

Sample input:
2 2 5
1 3
4 2

Sample output
2

Sample Explanation
Either you can have a blue book with width 4 and a red book with width 1, or you can have a red book with width 3, and a blue book with width 2.

Credit: Jeff L
